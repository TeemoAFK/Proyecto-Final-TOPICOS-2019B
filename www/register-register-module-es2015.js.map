{"version":3,"sources":["./src/app/register/register.page.html","./src/app/register/register.module.ts","./src/app/register/register.page.scss","./src/app/register/register.page.ts"],"names":[],"mappings":"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","file":"register-register-module-es2015.js","sourcesContent":["module.exports = \"<ion-header padding>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"goToLoginPage()\\\">\\n        <ion-icon name=\\\"md-arrow-back\\\" size=\\\"large\\\" color=\\\"success\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <figure text-center>\\n    <img src=\\\"assets/img/logo.png\\\" alt=\\\"Platzi Logo\\\" width=\\\"100px\\\" />\\n  </figure>\\n  <form\\n    class=\\\"form\\\"\\n    [formGroup]=\\\"validations_form\\\"\\n    (ngSubmit)=\\\"tryRegister(validations_form.value)\\\"\\n  >\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"success\\\">Nombre</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"firstname\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.firstname\\\">\\n        <div\\n          class=\\\"error-message\\\"\\n          *ngIf=\\\"\\n            validations_form.get('firstname').hasError(validation.type) &&\\n            (validations_form.get('firstname').dirty ||\\n              validations_form.get('firstname').touched)\\n          \\\"\\n        >\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"success\\\">Apellido</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"lastname\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.lastname\\\">\\n        <div\\n          class=\\\"error-message\\\"\\n          *ngIf=\\\"\\n            validations_form.get('lastname').hasError(validation.type) &&\\n            (validations_form.get('lastname').dirty ||\\n              validations_form.get('lastname').touched)\\n          \\\"\\n        >\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"success\\\">Email</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n        <div\\n          class=\\\"error-message\\\"\\n          *ngIf=\\\"\\n            validations_form.get('email').hasError(validation.type) &&\\n            (validations_form.get('email').dirty ||\\n              validations_form.get('email').touched)\\n          \\\"\\n        >\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"success\\\">Contraseña</ion-label>\\n      <ion-input\\n        type=\\\"password\\\"\\n        formControlName=\\\"password\\\"\\n        class=\\\"form-controll\\\"\\n        required\\n      ></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n        <div\\n          class=\\\"error-message\\\"\\n          *ngIf=\\\"\\n            validations_form.get('password').hasError(validation.type) &&\\n            (validations_form.get('password').dirty ||\\n              validations_form.get('password').touched)\\n          \\\"\\n        >\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-button\\n      shape=\\\"round\\\"\\n      class=\\\"submit-btn button-block\\\"\\n      color=\\\"success\\\"\\n      type=\\\"submit\\\"\\n      [disabled]=\\\"!validations_form.valid\\\"\\n      >Register</ion-button\\n    >\\n    <label class=\\\"error-message\\\">{{ errorMessage }}</label>\\n    <label class=\\\"success-message\\\">{{ successMessage }}</label>\\n  </form>\\n</ion-content>\\n\"","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { RegisterPage } from \"./register.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","module.exports = \".header-md:after {\\n  background-image: none;\\n}\\n\\n.submit-btn {\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n}\\n\\n.header-ios ion-toolbar {\\n  --border-width: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvQzpcXGZyYW1ld29ya3NcXGlvbmljNC1tdXNpYy1zdGFydGVyL3NyY1xcYXBwXFxyZWdpc3RlclxccmVnaXN0ZXIucGFnZS5zY3NzIiwic3JjL2FwcC9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBQTtBQ0NGOztBRENBO0VBQ0UsZ0JBQUE7RUFDQSxtQkFBQTtBQ0VGOztBRENBO0VBQ0UsaUJBQUE7QUNFRiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFkZXItbWQ6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xufVxuLnN1Ym1pdC1idG4ge1xuICBtYXJnaW4tdG9wOiAzMHB4O1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuXG4uaGVhZGVyLWlvcyBpb24tdG9vbGJhciB7XG4gIC0tYm9yZGVyLXdpZHRoOiAwO1xufVxuIiwiLmhlYWRlci1tZDphZnRlciB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG59XG5cbi5zdWJtaXQtYnRuIHtcbiAgbWFyZ2luLXRvcDogMzBweDtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbn1cblxuLmhlYWRlci1pb3MgaW9uLXRvb2xiYXIge1xuICAtLWJvcmRlci13aWR0aDogMDtcbn0iXX0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from \"@angular/forms\";\nimport { AuthenticateService } from \"../services/authenticate.service\";\nimport { NavController } from \"@ionic/angular\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"./register.page.html\",\n  styleUrls: [\"./register.page.scss\"]\n})\nexport class RegisterPage {\n  validations_form: FormGroup;\n  errorMessage: string = \"\";\n  successMessage: string = \"\";\n\n  validation_messages = {\n    email: [\n      { type: \"required\", message: \"El email es requerido\" },\n      { type: \"pattern\", message: \"Ingresa un email válido.\" }\n    ],\n    password: [\n      { type: \"required\", message: \"La contraseña es obligatoria.\" },\n      {\n        type: \"minlength\",\n        message: \"La contraseña debe tener al menos 5 caracteres.\"\n      }\n    ],\n    lastname: [\n      { type: \"required\", message: \"El apellido es requerido.\" },\n      {\n        type: \"minlength\",\n        message: \"El apellido debe tener mínimo tres letras.\"\n      }\n    ],\n    firstname: [\n      { type: \"required\", message: \"El nombre es requerido.\" },\n      {\n        type: \"minlength\",\n        message: \"El nombre debe tener mínimo tres letras.\"\n      }\n    ]\n  };\n\n  constructor(\n    private navCtrl: NavController,\n    private authService: AuthenticateService,\n    private formBuilder: FormBuilder\n  ) {\n    this.validations_form = this.formBuilder.group({\n      email: new FormControl(\n        \"\",\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\")\n        ])\n      ),\n      password: new FormControl(\n        \"\",\n        Validators.compose([Validators.minLength(5), Validators.required])\n      ),\n      firstname: new FormControl(\n        \"\",\n        Validators.compose([Validators.minLength(3), Validators.required])\n      ),\n      lastname: new FormControl(\n        \"\",\n        Validators.compose([Validators.minLength(3), Validators.required])\n      )\n    });\n  }\n\n  tryRegister(value) {\n    this.authService\n      .registerUser(value)\n      .then(a => {\n        console.log(a);\n        this.errorMessage = \"\";\n        this.successMessage = \"Tu cuenta se ha creado con éxito.\";\n        setTimeout(() => {\n          this.navCtrl.navigateForward(\"/login\");\n        }, 1000);\n      })\n      .catch(error => {\n        this.errorMessage = error;\n        this.successMessage = \"\";\n      });\n  }\n\n  goToLoginPage() {\n    this.navCtrl.navigateBack(\"/login\");\n  }\n}\n"],"sourceRoot":""}